{
  pkgs,
  lib,
  config,
  ...
}:

let
  enable = true;

  cfg = config.services;
  karakeep-port = 8008;

  proxy = config.networking.proxy.default;
  no_proxy = "localhost,127.0.0.1,.local,.ts.net";
in
{
  services.cloudflared' = lib.mkIf enable {
    ingress = {
      k = karakeep-port;
    };
  };

  sops =
    let
      inherit (config.sops) placeholder;
      owner = config.systemd.services.karakeep-workers.serviceConfig.User;
    in
    lib.mkIf enable {
      secrets = {
        tw_twid = { };
        tw_ct0 = { };
        tw_auth_token = { };
      };
      templates = {
        "yt-dlp-tw-cookie.txt" = {
          content = ''
            # Netscape HTTP Cookie File
            # This file is generated by yt-dlp.  Do not edit.

            .x.com	TRUE	/	TRUE	1794070634	auth_token	${placeholder.tw_auth_token}
            .x.com	TRUE	/	TRUE	1794070634	ct0	${placeholder.tw_ct0}
            .x.com	TRUE	/	TRUE	1791085840	twid	${placeholder.tw_twid}
          '';
          inherit owner;
        };
        # expires: Sun 2026-10-04 11:22:55 CST
        "karakeep-cookies.json" = {
          content = # json
            ''
              [
                {
                  "name": "twid",
                  "value": "${placeholder.tw_twid}",
                  "domain": ".x.com",
                  "path": "/",
                  "expires": 1791084175,
                  "httpOnly": false,
                  "secure": true,
                  "sameSite": "None"
                },
                {
                  "name": "ct0",
                  "value": "${placeholder.tw_ct0}",
                  "domain": ".x.com",
                  "path": "/",
                  "expires": 1794070634,
                  "httpOnly": false,
                  "secure": true,
                  "sameSite": "Lax"
                },
                {
                  "name": "auth_token",
                  "value": "${placeholder.tw_auth_token}",
                  "domain": ".x.com",
                  "path": "/",
                  "expires": 1794070634,
                  "httpOnly": true,
                  "secure": true,
                  "sameSite": "None"
                }
              ]
            '';
          inherit owner;
        };
      };
    };

  services.karakeep = {
    inherit enable;
    browser = {
      enable = true;
      exe = lib.getExe pkgs.ungoogled-chromium;
    };
    meilisearch.enable = true;
    extraEnvironment = {
      PORT = toString karakeep-port;
      DISABLE_SIGNUPS = "true";
      DISABLE_NEW_RELEASE_CHECK = "true";

      CRAWLER_FULL_PAGE_ARCHIVE = "true";
      CRAWLER_VIDEO_DOWNLOAD = "true";
      CRAWLER_VIDEO_DOWNLOAD_MAX_SIZE = "-1";
      CRAWLER_YTDLP_ARGS = "--cookies=${config.sops.templates."yt-dlp-tw-cookie.txt".path}";
      BROWSER_COOKIE_PATH = config.sops.templates."karakeep-cookies.json".path;

      CRAWLER_HTTP_PROXY = proxy;
      CRAWLER_HTTPS_PROXY = proxy;
      CRAWLER_NO_PROXY = no_proxy;
    }
    // (lib.optionalAttrs cfg.ollama.enable {
      OLLAMA_BASE_URL = "http://${cfg.ollama.host}:${toString cfg.ollama.port}";
      INFERENCE_TEXT_MODEL = "gemma3:4b";
      INFERENCE_IMAGE_MODEL = "gemma3:4b";
      EMBEDDING_TEXT_MODEL = "embeddinggemma:300m";
      INFERENCE_LANG = "chinese";
      INFERENCE_ENABLE_AUTO_TAGGING = "true";
      INFERENCE_ENABLE_AUTO_SUMMARIZATION = "true";
    });
  };
  systemd.services.karakeep-browser.environment = {
    all_proxy = proxy;
    http_proxy = proxy;
    https_proxy = proxy;
    inherit no_proxy;
  };
}
